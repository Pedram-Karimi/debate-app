// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["metrics"]
}
// neon: postgresql://player_owner:bIjCXH2d5FQU@ep-dark-dust-a5v094ig.us-east-2.aws.neon.tech/player?sslmode=require
// koyeb: postgres://koyeb-adm:C5Fda4VPJhGg@ep-misty-forest-a4gp1h2n.us-east-1.pg.koyeb.app/koyebdb
datasource db {
  provider = "postgresql"
  url      = "postgresql://debate-db_owner:4mUkeyT3Lslo@ep-summer-limit-a55ystbr.us-east-2.aws.neon.tech/debate-db?sslmode=require"
}

model User {
  id String @id @default(cuid())
  handle String @unique
  email        String @unique
  username String
  password String
  emailVerified Boolean @default(false)
  image String
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  debatesCreated DebateRoom[]
  debateArgs ReplyToDebate[]
}

model DebateRoom {
  id String @id @default(cuid())
  creator User   @relation(fields: [creatorId], references: [id])
  createdAt        DateTime           @default(now())
  creatorId String
  title String
  statement String
  media String
  currCat String
  replies ReplyToDebate[]
  description String
}

model ReplyToDebate {
  id String @id @default(cuid())
  room DebateRoom @relation(fields: [roomId], references: [id])
  creator User   @relation(fields: [creatorId], references: [id])
  messages DebateMssg[]
  challenger String
  createdAt        DateTime           @default(now())
  creatorId String
  roomId String
  text String
}

model DebateMssg {
  id String @id @default(cuid())
  mssg String
  reply ReplyToDebate @relation(fields: [replyId], references: [id])
  writerId String
  replyId String
  createdAt        DateTime           @default(now())
}
